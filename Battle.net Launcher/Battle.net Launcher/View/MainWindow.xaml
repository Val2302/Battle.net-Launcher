<Window x:Class="Battle.net_Launcher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Battle.net_Launcher"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="1000" MaxHeight="600" MaxWidth="1000"
        MinHeight="600" MinWidth="1000" Background="#FF110203"
        WindowStartupLocation="CenterScreen" WindowStyle="None" ResizeMode="NoResize">
    <Window.Resources>
        <!-- TOP MENU -->
        <ControlTemplate x:Key="TopMenuButtons" TargetType="Button">
            <Grid Name="Btn" Height="40" Margin="20,0,0,0">
                <Border>
                    <Grid>
                        <Label Content="{TemplateBinding Content}"
                               Background="Transparent" FontSize="23"
                               VerticalAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="#FF9D9999"/>
                                    <Style.Triggers>
                                        <!-- При наведении курсора мыши -->
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Btn}" 
                                                     Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>

                                        <!-- При нажатии на кнопку -->
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path=IsPressed}" Value="true">
                                            <Setter Property="Foreground" Value="#FF9D9999"/>
                                        </DataTrigger>

                                        <!-- Фокус кнопки - надпись остаётся белой -->
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path=IsFocused}" Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>

                        <!-- Блик -->
                        <Label Content="{TemplateBinding Content}"
                               Background="Transparent" Margin="-3,0,0,0"
                               VerticalAlignment="Center" FontSize="23" FontWeight="Bold">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Visibility" Value="Hidden"/>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path=IsFocused}" Value="true">
                                            <DataTrigger.Setters>
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <BlurEffect Radius="25"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </Grid>
                    
                    <!-- Анимация нажатия -->
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path=IsFocused}" Value="true">
                                    <Setter Property="Margin" Value="0,2,0,0"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </Grid>
        </ControlTemplate>

        <!-- MAIN MENU -->
        <ControlTemplate x:Key="SlideMenuBtn" TargetType="Button">
            <Grid Name="Btn" Height="45">
                <Border>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{DynamicResource ResourceKey=Img}"
                               VerticalAlignment="Center" HorizontalAlignment="Left"
                               Height="30" Width="30" Stretch="Fill" Margin="20,0,0,0"/>

                        <Label Content="{TemplateBinding Content}" Margin="10,0,0,0"
                               Background="Transparent" FontSize="14"
                               VerticalAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="#FF9D9999"/>
                                    <Style.Triggers>
                                        <!-- При наведении курсора мыши -->
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Btn}" 
                                                     Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>

                                        <!-- Фокус кнопки - надпись остаётся белой -->
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path=IsFocused}" Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </StackPanel>
                </Border>
                
                <Border Name="MouseOverBorder" Background="#FF8D8D8D">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Opacity" Value="0"/>
                            
                            <!-- Прозрачность -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Btn}"
                                         Value="true">
                                    <Setter Property="Opacity" Value="0.1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>

                <Border Name="IsSelectedBorder" Background="#FF8D8D8D">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Opacity" Value="0"/>

                            <Style.Triggers>
                                <!-- Фокус кнопки - надпись остаётся белой -->
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path=IsFocused}" Value="true">
                                    <Setter Property="Opacity" Value="0.1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>

                <Border Name="IsSelectedBorder2" Background="Transparent">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Setter Property="BorderThickness" Value="3,0,0,0"/>
                            <Setter Property="BorderBrush" Value="#FF00AEFF"/>
                            
                            <!-- Полоска фокуса -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type Button}},
                                            Path=IsFocused}" Value="true">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </Grid>
        </ControlTemplate>
    </Window.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>            
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid Name="TopMenu" Grid.Row="0" Grid.ColumnSpan="2">
            <Border>
                <Border.Effect>
                    <BlurEffect Radius="2"/>
                </Border.Effect>
            </Border>
            
            <Border BorderThickness="1" BorderBrush="#FF303031" Background="Transparent">
                <StackPanel Orientation="Horizontal">
                    <Button Template="{StaticResource ResourceKey=TopMenuButtons}" Content="ИГРЫ" />
                    <Button Template="{StaticResource ResourceKey=TopMenuButtons}" Content="ОБЩЕНИЕ" />
                    <Button Template="{StaticResource ResourceKey=TopMenuButtons}" Content="МАГАЗИН" />
                    <Button Template="{StaticResource ResourceKey=TopMenuButtons}" Content="НОВОСТИ" />
                </StackPanel>
            </Border>
        </Grid>

        <Grid Name="SlideMenu" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Width" Value="225"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=OpenCloseSlideMenuBtn}"
                                     Value="true">
                            <Setter Property="Width" Value="60"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>            
            
            <Border BorderThickness="1,0,1,1" BorderBrush="#FF303031" />
            <Border BorderThickness="0" Background="Black" Opacity="0.6"/>

            <StackPanel Orientation="Vertical">
                <Button Template="{StaticResource ResourceKey=SlideMenuBtn}"
                        Content="World Of Warcraft">
                    <Button.Resources>
                        <ImageSource x:Key="Img">Res/Icons/WOW.png</ImageSource>
                    </Button.Resources>
                </Button>

                <Button Template="{StaticResource ResourceKey=SlideMenuBtn}"
                        Content="Hearthstone">
                    <Button.Resources>
                        <ImageSource x:Key="Img">Res/Icons/hs.png</ImageSource>
                    </Button.Resources>
                </Button>

                <Button Template="{StaticResource ResourceKey=SlideMenuBtn}"
                        Content="Overwatch">
                    <Button.Resources>
                        <ImageSource x:Key="Img">Res/Icons/overwatch.png</ImageSource>
                    </Button.Resources>
                </Button>

                <Button Template="{StaticResource ResourceKey=SlideMenuBtn}"
                        Content="Warcraft III">
                    <Button.Resources>
                        <ImageSource x:Key="Img">Res/Icons/warcraft3.png</ImageSource>
                    </Button.Resources>
                </Button>

                <Button Template="{StaticResource ResourceKey=SlideMenuBtn}"
                        Content="Diablo III">
                    <Button.Resources>
                        <ImageSource x:Key="Img">Res/Icons/diablo.png</ImageSource>
                    </Button.Resources>
                </Button>

                <Button Template="{StaticResource ResourceKey=SlideMenuBtn}"
                        Content="Heroes of the Storm">
                    <Button.Resources>
                        <ImageSource x:Key="Img">Res/Icons/hots.png</ImageSource>
                    </Button.Resources>
                </Button>

                <Button Template="{StaticResource ResourceKey=SlideMenuBtn}"
                        Content="StarCraft II">
                    <Button.Resources>
                        <ImageSource x:Key="Img">Res/Icons/sc2.png</ImageSource>
                    </Button.Resources>
                </Button>

                <Button Template="{StaticResource ResourceKey=SlideMenuBtn}"
                        Content="StarCraft">
                    <Button.Resources>
                        <ImageSource x:Key="Img">Res/Icons/sc.png</ImageSource>
                    </Button.Resources>
                </Button>
            </StackPanel>

            <ToggleButton Focusable="False" x:Name="OpenCloseSlideMenuBtn" Height="20" Width="20"
                          VerticalAlignment="Bottom" HorizontalAlignment="Left"
                          Margin="20,0,0,20">
                <ToggleButton.Template>
                    <ControlTemplate>
                        <Image>
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Source" Value="Res/Icons/Close.png"/>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor,
                                            AncestorType={x:Type ToggleButton}},
                                            Path=IsChecked}" Value="true">
                                            <Setter Property="Source" Value="Res/Icons/Open.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
        </Grid>
    </Grid>
</Window>
